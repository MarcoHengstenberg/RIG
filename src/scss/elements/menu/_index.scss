.menuToggleButton {
  position: fixed;
  top: $base-padding;

  &.-left {
    left: $base-padding;
  }

  &.-right {
    right: $base-padding;
  }

  @include larger-than('medium-screen') {
    display: none;
  }

}

.menu {
  display: inline-block;
  position: fixed;
  width: 100%;
  max-width: $e-menu;
  background: color('menu', 'bg');
  top: 0;
  height: 100vh;
  overflow-x: hidden;
  overflow-y: scroll;

  @include smaller-than('medium-screen') {
    transition: transform 300ms;

    &.-left {
      transform: translateX(-100%);
    }

    &.-right {
      transform: translateX(100%);
    }


    &.is-open {
      transform: translateX(0);
    }
  }


  &.-left {
    left: 0;
    border-right: 1px solid color('menu', 'border');
  }

  &.-right {
    right: 0;
    border-left: 1px solid color('menu', 'border');
  }

  &[data-rig-menu="horizontal"] {
    @include larger-than('medium-screen') {
      display: block;
      position: inherit;
      max-width: 100%;
      border: 0;
      border-bottom: 1px solid color('menu', 'border');
      height: auto;
    }
  }
}

// If the menu is not a horizontal one,
// add paddings to the container
.menu:not([data-rig-menu="horizontal"]) {

  @at-root {

    @include larger-than('medium-screen') {
      &.-left ~ .container {
        padding-left: $e-menu;
      }

      &.-right ~ .container {
        padding-right: $e-menu;
      }
    }

    @include larger-than('large-screen', 300px) {
      &.-left ~ .container {
        padding-left: $e-menu/2;
      }

      &.-right ~ .container {
        padding-right: $e-menu/2;
      }
    }

    @include larger-than('large-screen', 400px) {
      &.-left ~ .container {
        padding-left: $e-menu/3;
      }

      &.-right ~ .container {
        padding-right: $e-menu/3;
      }
    }

    @include larger-than('large-screen', 600px) {
      &.-left ~ .container {
        padding-left: 0;
      }

      &.-right ~ .container {
        padding-right: 0;
      }
    }

  } // End of at-root

}
