doctype html
html lang="en"
  head
    meta charset='UTF8'
    link rel="stylesheet"  type="text/css" href="rig.css"
    link rel="stylesheet"  type="text/css" href="doc-assets/css/prism.css"

    link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet"

    title RIG CSS Framework

    scss:
      #rig {
        position: relative;
        height: 90%;
        width: 100%;
        background-image: url(doc-assets/img/title.jpg);
        background-position: center center;

        h1 {
          position: absolute;
          display: inline-block;
          width: 8rem;
          line-height: 8rem;
          text-transform: uppercase;
          color: #fff;
          border: 6px solid #fff;
          margin: 0;
          top: 45%;
          left: 50%;
          transform: translate(-50%,-50%);
          -webkit-transform: translate(-50%,-50%);
          font-family: "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif;
        }

        h2 {
          position: absolute;
          display: inline-block;
          top: 45%;
          width: 100%;
          left: 0;
          margin: 0;
          margin-top: 6rem;
          font-size: 1.8rem;
          color: #fff;

          a {
            font-size: 1.8rem;
            color: #f9f9f9;
            background: {
              repeat: repeat-x;
              size: .1rem .2rem;
              position: 0 90%;
              image: linear-gradient(to bottom, transparent 50%, #fff 50%);
            }
          }
        }
      }

      .rig-docs-section {

        > h2:first-child {
          background: {
            repeat: repeat-x;
            size: .1rem .2rem;
            position: 0 82%;
            image: linear-gradient(to bottom, transparent 50%, #9f9f9f 50%);
          }
        }
      }

      .rig-docs-div {
        background: #efefef;
        padding: .5rem;
        border-radius: .2rem;

        + .rig-docs-div {
          margin-top: .5rem;
        }

        .icon {
          width: 1.5rem;
        }
      }

      #grid {
        .col {
          background: #dfdfdf;
          line-height: 2.5rem;
          border-left: 1rem solid #afafaf;
          border-right: 1rem solid #afafaf;
        }

        .row {
          margin-top: 10px;

          .row {
            margin: 0;
          }
        }
      }



  body.rig-docs
    header#rig
      h1 RIG
      h2
        | A CSS Framework by
        a<> href="http://codeship.com" target="_blank" Codeship

    .contentWrapper

      //* ---------------------------------------------------------------------------- *//
      //* WELCOME
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#welcome
        h2 What is RIG
        p Rig is a Basic CSS Framework made by the guys from codeship.
          It was created during the relaunch process while aiming for
          a modern UI with a well structured and clean CSS approach.
        ul.ul
          li Thought through default values for many html elements
          li A flexible yet powerfull grid system
          li BEM Oriented CSS structure

      //* ---------------------------------------------------------------------------- *//
      //* SOURCECODE
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#sourcecode
        h2 Sourcecode
        p The following example shows how Sourcodeblocks will look like in this docsets. And the first Example shown is how a sourcecode block is made. Pretty Meta right ?

        pre
          code.language-markup
            | &lt;pre&gt;
                &lt;code class="language-markup" &gt;
                  ...
                &lt;/code&gt;
              &lt;/pre&gt;

      //* ---------------------------------------------------------------------------- *//
      //* BASICS
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#basics
        h2 Basics

        p When we started to create RIG it was based on the decission to keep the frontendfootprint as small as possible.
          The idea of taking a fully designed CSS Framework and afterwards override most of the values to differ from the original looks as much as possible was one thing we wanted to avoid.
          We think a CSS Framework should be as small and minimal as possible as it should only show you a direction and not force you into it.

        p The goal of RIG is to support you with clever and semantic classes wherever possible. Feel free to go through the sourcecode and alter things to your project needs.
          Also if you discover any bugs please feel free to open a GitHub Issue any time.



      //* ---------------------------------------------------------------------------- *//
      //* TYPOGRAPHY
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#typography
        h2 Typography

        h1 Heading 1
        h2 Heading 2
        h3 Heading 3
        h4 Heading 4
        h5 Heading 5
        h6 Heading 6

        p
          strong Note:
          |  Sometims it makes sense to use an &lt;h*&gt; tag for better semantics but you want to imiitate the look of another level.

            For this RIG provides you classes from <code>like-h1</code> to <code>like-h6</code>

        h3 Paragraph:

        p Bacon ipsum dolor sit amet pastrami short ribs pork belly andouille ribeye doner chuck pork biltong cow chicken beef. Short ribs frankfurter pork chop jerky. Frankfurter shank tri-tip shankle short ribs venison swine salami strip steak sirloin pig chuck. Pork bresaola short ribs, salami shoulder pork belly tail turkey meatball pastrami filet mignon pig chicken meatloaf frankfurter.

        a.link This is a great looking link

        ul.ul
          li Unordered List1
          li Unordered List2
          li Unordered List3

        ol.ol
          li Ordered List1
          li Ordered List2
          li Ordered List3

        code This is some $code

        h3 Helpers:

        p
          | For convenience of styling text through a class you have following options:
          br
          code is-italic
          code is-bold
          code is-uppercase
          code is-captilize
          code ta-left
          code ta-center
          code ta-right
          code ta-justify

        p
          strong Note:
          |  Of course you should try to use
          code &lt;strong | b&gt;
          | or
          code &lt;em | i&gt;
          | whenever possible, but sometimes a class comes in handy.

      //* ---------------------------------------------------------------------------- *//
      //* RESPONSIVENESS
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#responsiveness
        h2 Responsive
        p This Framework aims for awesome responsive support as much as possible.
          It`s not perfect in any case but will grow to all the needs.
        p The Following Breakpoints and widths are defined by default and should help you provide
          readable content.

        ul.ul
          li
            strong Contentwidth
            code 68rem
            p This is the maximum Content width so it creates a good reading experience on very large Screens
          li
            strong Large
            code &gt; 60rem
            p This is the first breakpoint. Everything bigger than <strong>60rem</strong> counts as a large Screen
            p Classes regarding large Screens contain <code>lg</code>
          li
            strong Medium
            code 45rem - 60rem
            p This is the second breakpoint. Medium Screens usually should be readable between <strong>45rem - 60rem</strong>
            p Classes regarding medium Screens contain <code>md</code>
          li
            strong Small
            code 30rem - 45rem
            p The third Breakpoint area aims to provide a good readability on Small Screens in <strong>30rem - 45rem</strong>
            p Classes regarding small Screens contain <code>sm</code>
          li
            strong Xtra Small
            code &lt; 30rem
            p Xtra Small are all screens that are below <strong>30rem</strong>
            p Classes regarding very small Screens contain <code>xs</code>

        h3  Helper Classes
        p <em>RIG</em> provides some helpfull classes for your application when working with responsive Elements. The Following Boxes demonstrate available classes.

        h4 Boxes only of Specific Sizes
        .only-lg.rig-docs-div: p
          i.icon.fa.fa-desktop
          | Visible on LARGE Screens
          code .only-lg
        .only-md.rig-docs-div: p
          i.icon.fa.fa-laptop
          | Visible on MEDIUM Screens
          code .only-md
        .only-sm.rig-docs-div: p
          i.icon.fa.fa-tablet
          | Visible on SMALL Screens
          code .only-sm
        .only-xs.rig-docs-div: p
          i.icon.fa.fa-mobile
          | Visible on XSMALL Screens
          code .only-xs

        h4 Boxes viewable until Specifc Screensizes
        .only-till-md.rig-docs-div: p
          span.icon.fa.fa-desktop
          | Visible only untill MEDIUM Screens
          code .only-till-md
        .only-till-sm.rig-docs-div: p
          i.icon.fa.fa-laptop
          | Visible only untill SMALL Screens
          code .only-till-sm
        .only-till-xs.rig-docs-div: p
          i.icon.fa.fa-tablet
          | Visible only untill XSMALL Screens
          code .only-till-xs

        h4 Boxes hidden on certain Screensizes
        .hidden-on-lg.rig-docs-div: p
          i.icon.fa.fa-desktop
          | Hidden on LARGE Screens
          code .hidden-on-lg
        .hidden-on-md.rig-docs-div: p
          i.icon.fa.fa-laptop
          | Hidden on MEDIUM Screens
          code .hidden-on-md
        .hidden-on-sm.rig-docs-div: p
          i.icon.fa.fa-tablet
          | Hidden on SMALL Screens
          code .hidden-on-sm
        .hidden-on-xs.rig-docs-div: p
          i.icon.fa.fa-mobile
          | Hidden on XSMALL Screens
          code .hidden-on-xs

        p You can also use <em>visible</em> instead of <em>hidden</em> to have the opposit.

      //* ---------------------------------------------------------------------------- *//
      //* GRIDSYSTEM
      //* ---------------------------------------------------------------------------- *//
      section.rig-docs-section#grid
        h2 Grid
        p The <em>Gridsystem</em> we have available througout the page should be very easy to use.
          It doesn't bring along a lot of styling so it only helps you keeping things in proportions you like.
          This system isn't build on columns as columns don't always make sense. Instead you can use percentages of 100% space
        h3 Available Gridspaces
        p You can use grid columns width values 10%, 15%, 20%, 25%, 30%, 33%, 40%, 50%, 60%, 66%, 70%, 75%, 80%, 85%, 90% and 100%
        p You can also use <code>size--offset00</code> or <code>size--tail00</code> to prepend or append column spaces.

        p To create a column just add the class <code>.col</code> to the element and append the according column sizes.
        p The following example shows the same grid col size on every screen width. If you don't set a width for certain sizes it will be 100% by default

        .grid
          .row: .col.xs10.sm10.md10.lg10 col xs10 sm10 md10 lg10
          .row: .col.xs15.sm15.md15.lg15 col xs15 sm15 md15 lg15
          .row: .col.xs20.sm20.md20.lg20 col xs20 sm20 md20 lg20
          .row: .col.xs25.sm25.md25.lg25 col xs25 sm25 md25 lg25
          .row: .col.xs30.sm30.md30.lg30 col xs30 sm30 md30 lg30
          .row: .col.xs33.sm33.md33.lg33 col xs33 sm33 md33 lg33
          .row: .col.xs40.sm40.md40.lg40 col xs40 sm40 md40 lg40
          .row: .col.xs50.sm50.md50.lg50 col xs50 sm50 md50 lg50
          .row: .col.xs60.sm60.md60.lg60 col xs60 sm60 md60 lg60
          .row: .col.xs66.sm66.md66.lg66 col xs66 sm66 md66 lg66
          .row: .col.xs70.sm70.md70.lg70 col xs70 sm70 md70 lg70
          .row: .col.xs75.sm75.md75.lg75 col xs75 sm75 md75 lg75
          .row: .col.xs80.sm80.md80.lg80 col xs80 sm80 md80 lg80
          .row: .col.xs85.sm85.md85.lg85 col xs85 sm85 md85 lg85
          .row: .col.xs90.sm90.md90.lg90 col xs90 sm90 md90 lg90
          .row: .col.xs100.sm100.md100.lg100 col xs100 sm100 md100 lg100

        h3 Combining Grids

        .grid
          .row
            .col.md10.lg10 .col.md10.lg10
            .col.md20.lg20 .col.md20.lg20
            .col.md40.lg40 .col.md40.lg40
            .col.md30.lg30 .col.md30.lg30
          .row
            .col.md33.lg33 .col.md33.lg33
            .col.md33.lg33 .col.md33.lg33
            .col.md33.lg33 .col.md33.lg33
          .row
            .col.md33.lg33 .col.md33.lg33
            .col.md66.lg66 .col.md66.lg66

        h3 Tailing and Offset Grids

        .grid
          .row
            .col.lg30.lg--tail20 .col.lg30.lg--tail20
            .col.lg50 .col.lg50
          .row
            .col.lg30.lg--offset20 .col.lg30.lg--offset20
            .col.lg50 .col.lg50
          .row
            .col.lg60.lg--offset10.lg--tail10 .col.lg60.col.lg--offset10.col.lg--tail10
            .col.lg20 .colxs20

        h3 Example of Nesting Grids
        .grid
          .row
            .colxs70
              | .colxs70
              .row
                .colxs50 .colxs50
                .colxs50 .colxs50
            .colxs30
              | .colxs30
              .row
                .colxs33 .colxs33
                .colxs66 .colxs66

        pre
          code.language-markup
            | &lt;!-- Example of nesting columns inside columns... and so on :) -->
              &lt;div class="grid">
                &lt;div class="row">
                  &lt;div class="col lg100">
                    &lt;div class="row">
                      &lt;div class="col lg50">...&lt;/div>
                      &lt;div class="col lg50">...&lt;/div>
                    &lt;/div> &lt;!-- end row -->
                  &lt;/div> &lt;!-- end col lg100 -->
                &lt;/div> &lt;!-- end row -->
              &lt;/div> &lt;!-- end grid -->

        h3 Responsive Grid
        .grid
          .row
            .col.sm50.md33.lg25 .col .sm50 .md33 .lg25
            .col.sm50.md33.lg25 .col .sm50 .md33 .lg25
            .col.sm50.md33.lg25 .col .sm50 .md33 .lg25
            .col.sm50.md33.lg25 .col .sm50 .md33 .lg25

        h3 Special Grid Classes
        p There are some special classes that will help you work with grids more effectively.

        ul.ul
          li
            code .grid--cling
            p This will remove the padding on both sides of the grid giving you full when needed. For Example Images or colored containers.
          li
            code .col--cling
            p This removes the padding on a column.

    script src="doc-assets/js/prism.js"

