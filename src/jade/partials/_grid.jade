h1.section-title GridSystem

p This Grid is Percentage based. From 5 - 100%. It is seperated by 5% steps to make calculations easy and intuitive. If you want to use columns divided by 3 you can use 33% and 66%.

p columns are hosted in rows and are fully responsive if you want them to.

p.example Example:

.grid.grid-presentation
  .row
    .col.s50.m25.l20
      p .col.s50.m25.l20
    .col.s50.m25.l20
      p .col.s50.m25.l20
    .col.s50.m25.l20
      p .col.s50.m25.l20
    .col.s50.m25.l20
      p .col.s50.m25.l20
    .col.s50.m25.l20
      p .col.s50.m25.l20

p.example Example:
p.
  You can also nest grids in each other. Be sure to use <code>.row</code> Elements for generating a clean and semantic structure.
  Also you can use the <code>-cling</code> class on elements if you don't want to have a padding on those columns


.grid.grid-presentation
  .row
    .col
      .row
        .col.s50.m50.l25
          p .col.s50.m50.l25
        .col.s50.m50.l25
          p .col.s50.m50.l25
          .row
            .col.s33.m50.-cling
              p .col.s33.m50
            .col.s33.l70.-cling
              p .col.s33.l70
            .col.s33.-cling
              p .col.s33

p.example Example:
p Using Tail and Offset for handling spaces between you columns

.grid.grid-presentation
  .row
    .col.s70.s-offset15.m50.m-offset25
      p .col.s70.s-offset15.m50.m-offset25

.grid.grid-presentation
  .row
    .col.s50.s-tail10
      p .col.s50.s-tail10
    .col.s40
      p .col.s40














